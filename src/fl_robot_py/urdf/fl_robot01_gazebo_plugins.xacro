<?xml version="1.0"?>
<robot>  

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <always_on>false</always_on>
      <legacy_mode>false</legacy_mode>
      <update_rate>20</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>${wheel_separation}</wheel_separation>
      <wheel_diameter>${wheel_radius * 2}</wheel_diameter>
     <!-- limits -->
      <max_wheel_torque>120</max_wheel_torque>
      <max_wheel_acceleration>11.0</max_wheel_acceleration>

      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>

      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->   
      <publish_odom_tf>false</publish_odom_tf>
          <!-- the abovbe if made on creates problem rviz -->
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->   
      <publish_wheel_tf>true</publish_wheel_tf>
    

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

      <odometry_source>1</odometry_source>
    </plugin>
    <plugin name="fishbot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
          <ros>
            <remapping>~/out:=joint_states</remapping>
          </ros>
          <update_rate>30</update_rate>
          <joint_name>left_wheel_joint</joint_name>
          <joint_name>right_wheel_joint</joint_name>
      </plugin>  
   </gazebo>

  <!--Gazebo Hokuyo Laser Plugin-->
  <gazebo reference="sensor_laserOLD">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1440</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topic_name>/fl_robot_py/laser_scan/scan</topic_name>
        <frame_name>sensor_laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>
   <!-- Add ROS plugin so we can interact with our robot -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  
   <gazebo reference="sensor_laser">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>181</samples>
            <resolution>1.000000</resolution>
            <min_angle>-1.51</min_angle>
            <max_angle>1.51</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>sensor_laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="sensor_laser">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
<!--    <material>Gazebo/Black</material> -->
  </gazebo>


</robot>

