<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from fl_robot01.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mv_robot1">
  <!--Gazebo Color Properties-->
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="top_cover">
    <!--    <material>Gazebo/GreenTransparentOverlay</material> -->
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="left_wheel">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="sensor_laser">
    <material>Gazebo/Gray</material>
  </gazebo>
  <gazebo reference="north">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="caster_wheel">
    <material>Gazebo/Blue</material>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <slip1>1.0</slip1>
    <slip2>1.0</slip2>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="mycolor">
    <color rgba="0.1 0.2 0.2 1.0"/>
  </material>
  <!--Base Footprint-->
  <link name="base_footprint">
    <!--    <xacro:box_inertia m="10" w="0.001" h="0.001" d="0.001"/> -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <!--Base link-->
  <link name="base_link">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.0021416666666666667" ixy="0.0" ixz="0.0" iyy="0.004266666666666667" iyz="0.0" izz="0.0021416666666666667"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.16 0.16 0.07"/>
      </geometry>
      <!--      <material name="black"/> -->
    </visual>
    <collision>
      <geometry>
        <box size="0.16 0.16 0.07"/>
      </geometry>
    </collision>
  </link>
  <link name="top_cover">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.005633333333333333" ixy="0" ixz="0" iyy="0.005633333333333333" iyz="0" izz="0.01125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.15"/>
      </geometry>
      <!--      <material name="mycolor" /> -->
    </visual>
    <collision name="cover_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.15"/>
      </geometry>
    </collision>
    <sensor name="my_contact" type="contact">
      <contact>
        <collision>cover_collision</collision>
      </contact>
    </sensor>
  </link>
  <link name="north">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.01"/>
      </geometry>
    </visual>
    <collision name="north_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="north_cover_joint" type="fixed">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="top_cover"/>
    <child link="north"/>
    <origin rpy="0 0 0" xyz=" 0.13999999999999999 0 0.005"/>
  </joint>
  <link name="south">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.01"/>
      </geometry>
    </visual>
    <collision name="north_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.001" radius="0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="south_cover_joint" type="fixed">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="top_cover"/>
    <child link="south"/>
    <origin rpy="0 0 0" xyz=" -0.13999999999999999 0 0.005"/>
  </joint>
  <joint name="cover_base_joint" type="fixed">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="top_cover"/>
    <origin rpy="0 0 0" xyz=" 0 0 0.04"/>
  </joint>
  <!--base_link to base_footprint Joint-->
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.04"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="left_wheel">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.005" radius="0.035"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.005" radius="0.035"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>200.0</mu>
            <mu2>100.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00030833333333333337" ixy="0" ixz="0" iyy="0.00030833333333333337" iyz="0" izz="0.0006125000000000001"/>
    </inertial>
  </link>
  <joint name="left_wheel_joint" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin rpy="0 0 0" xyz="-0.02 0.08700000000000001 -0.005"/>
  </joint>
  <transmission name="left_wheel_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_motor">
      <mechanicalReduction>0</mechanicalReduction>
    </actuator>
    <joint name="left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="right_wheel">
    <visual>
      <origin rpy="-1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.005" radius="0.035"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="-1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.005" radius="0.035"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>200.0</mu>
            <mu2>100.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00030833333333333337" ixy="0" ixz="0" iyy="0.00030833333333333337" iyz="0" izz="0.0006125000000000001"/>
    </inertial>
  </link>
  <joint name="right_wheel_joint" type="continuous">
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin rpy="0 0 0" xyz="-0.02 -0.08700000000000001 -0.005"/>
  </joint>
  <transmission name="right_wheel_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_motor">
      <mechanicalReduction>0</mechanicalReduction>
    </actuator>
    <joint name="right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <!--Caster Wheel Link -->
  <link name="caster_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.0175"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.0175"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00012250000000000002" ixy="0.0" ixz="0.0" iyy="0.00012250000000000002" iyz="0.0" izz="0.00012250000000000002"/>
    </inertial>
  </link>
  <!-- Caster Wheel Joint -->
  <joint name="fixed" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
  </joint>
  <link name="sensor_laser">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.015"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.2"/>
      <inertia ixx="4.1666666666666665e-05" ixy="0.0" ixz="0.0" iyy="2.9999999999999997e-05" iyz="0.0" izz="4.1666666666666665e-05"/>
    </inertial>
  </link>
  <joint name="sensor_laser_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.025"/>
    <parent link="top_cover"/>
    <child link="sensor_laser"/>
  </joint>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <always_on>false</always_on>
      <legacy_mode>false</legacy_mode>
      <update_rate>20</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.174</wheel_separation>
      <wheel_diameter>0.07</wheel_diameter>
      <!-- limits -->
      <max_wheel_torque>120</max_wheel_torque>
      <max_wheel_acceleration>11.0</max_wheel_acceleration>
      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>cmd_vel</command_topic>
      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->
      <publish_odom_tf>false</publish_odom_tf>
      <!-- the abovbe if made on creates problem rviz -->
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_source>1</odometry_source>
    </plugin>
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="fishbot_joint_state">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>right_wheel_joint</joint_name>
    </plugin>
  </gazebo>
  <!--Gazebo Hokuyo Laser Plugin-->
  <gazebo reference="sensor_laserOLD">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1440</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topic_name>/fl_robot_py/laser_scan/scan</topic_name>
        <frame_name>sensor_laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Add ROS plugin so we can interact with our robot -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  <gazebo reference="sensor_laser">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>181</samples>
            <resolution>1.000000</resolution>
            <min_angle>-1.51</min_angle>
            <max_angle>1.51</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="scan">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>sensor_laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="sensor_laser">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <!--    <material>Gazebo/Black</material> -->
  </gazebo>
</robot>
